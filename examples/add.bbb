#data 0020 1000 00A0 0000

#org 1000
#data 0BAD            (Operand A)

#org 1004
#data 0CA7            (Operand B)

#org 0020
ADD:
    MOV 3 %ix         (We're going to index from the rightmost, or least      )
    JMP 1=1 .START    (  significant position and work our way to the left.   )
LOOP:
    DEC %ix
START:
    MOV *1000 *F000   (Copy a digit from operand A to the display.)
    MOV *1004 *F004   (Copy a digit from operand B to the display.)

    MOV *1000 %a      (Copy a digit from operand A to the A register.)
    ADD *1004 %a      (Add the value of operand B to the A register; if the   )
                      (  carry flag was set before the addition, increment    )
                      (  the result by one. Afterwards, set the carry flag to )
                      (  reflect whether the result is greater than 15.       )

    MOV %a *F00C      (Copy the result to the display.)

    CMP 0x0 %ix       (Loop if the index register is not 0.)
    JMP Z=0 .LOOP

HALT:
    OR 2 %s1
